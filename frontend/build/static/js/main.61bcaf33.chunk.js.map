{"version":3,"sources":["components/Footer.jsx","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.jsx","components/Header.jsx","components/Rating.jsx","components/Product.jsx","constants/productConstants.js","actions/productActions.js","components/Preloader.jsx","components/Paginate.jsx","components/Message.jsx","components/ProductCarousel.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScrin.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","actions/orderActions.js","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/ProductListScreen.jsx","screens/ProductEditScreen.jsx","screens/OrderListScreen.jsx","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducer.js","index.js"],"names":["Footer","Container","Row","Col","className","Date","getFullYear","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_NOT_PAYMENT_METHOD","DELETE_MESSAGE","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","Button","variant","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","substring","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProductsDetails","listProducts","Preloader","Spinner","animation","role","height","width","margin","display","Paginate","pages","page","split","console","log","Pagination","Array","keys","map","x","active","Message","children","Alert","ProductCarousel","productTopRated","error","products","loading","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","search","sm","md","ld","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productRewievCreate","createProductReview","errorProductReview","loadingProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","productId","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","item","rounded","reduce","acc","toFixed","FormContainer","LoginScrin","email","setEmail","password","setpassword","redirect","username","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","orders","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","hover","responsive","order","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddres","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","SetPaymentMethod","failPayment","orderCreate","errror","stylee","Check","label","PlaceOrderScreen","itemsPrice","shippingPrice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","href","shippingAddress","idDelivered","deviveredAt","join","amount","onSuccess","paymentResult","payOrder","deliveredOrder","UserListScreen","userList","users","successDelete","userDelete","deliteHandler","confirm","delete","deleteUser","bordered","UserEditScreen","userId","setAdmin","userUpdate","errorUpdate","successUpdate","loadingUpdate","updateUser","checked","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setBrand","setCategory","setCountInStock","setDescription","setImage","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.61bcaf33.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <footer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"text-center py-3\">\r\n                        {new Date().getFullYear()} Copyright &copy; ProShop\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\n\r\n\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'        //обновление информации позьзователя из админки\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_NOT_PAYMENT_METHOD = 'ORDER_NOT_PAYMENT_METHOD'\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const  ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const  ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const  ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const  ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const  ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const  ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const  ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\nexport const  ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const  ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const  ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const  ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const  ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const  ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const  ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const  ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const  ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const  ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const  ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LOGOUT,\r\n  USER_DETAILS_RESET,\r\n\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({type: USER_DETAILS_RESET})\r\n  dispatch({type:ORDER_LIST_MY_RESET})\r\n  dispatch({type:USER_LIST_RESET})\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile/update/`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/users/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`, \r\n      user,\r\n      config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload:data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form,Col, Row ,Button} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst SearchBox = () => {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            className='mr-sm-2 ml-sm-6'\r\n            >\r\n            </Form.Control>\r\n\r\n            <Button\r\n            type='submit'\r\n            variant='outline-success'\r\n            className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {logout} from '../actions/userActions';\r\nimport SearchBox from \"./SearchBox\";\r\n\r\n\r\nconst Header = () => {\r\n\r\nconst userLogin = useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin\r\nconst dispatch = useDispatch()\r\n\r\nconst logoutHandler = () =>{\r\n     dispatch(logout())\r\n}\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox/>\r\n            <Nav className=\"ml-auto\">\r\n\r\n\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n\r\n            {userInfo ? ( // Если пользоватерь зарегался показать его имя и добавить вкладки(Выпадающего списка) Profile и Logout а если нет то показать login\r\n              <NavDropdown title={userInfo.name} id='username'>\r\n                <LinkContainer to='/profile'>\r\n                  <NavDropdown.Item>\r\n                    Profile\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>        \r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ): (\r\n              <LinkContainer to=\"/login\">\r\n              <Nav.Link>\r\n                <i className=\"fas fa-user\"></i>Login\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            )}\r\n\r\n\r\n          \r\n            {userInfo && userInfo.isAdmin && (\r\n               <NavDropdown title='admin' id='adminmenu'>\r\n               <LinkContainer to='/admin/userlist'>\r\n                 <NavDropdown.Item>\r\n                   Users\r\n                 </NavDropdown.Item>\r\n               </LinkContainer>  \r\n\r\n                  <LinkContainer to='/admin/productlist'>\r\n                 <NavDropdown.Item>\r\n                   Products\r\n                 </NavDropdown.Item>\r\n               </LinkContainer>\r\n\r\n            <LinkContainer to='/admin/orderlist'>\r\n                 <NavDropdown.Item>\r\n                   Orders\r\n                 </NavDropdown.Item>\r\n               </LinkContainer>   \r\n\r\n             </NavDropdown>\r\n            )}\r\n\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        \r\n       <Card className=\"my-3 p-3 rounded\" >\r\n           <Link to={`/product/${product._id}`}>\r\n               <Card.Img src={product.image}/>\r\n           </Link>\r\n           <Card.Body>\r\n           <Link to={`/product/${product._id}`}>\r\n              <Card.Title as=\"div\">\r\n                  <strong>\r\n                    {product.name.substring(0,17)}...\r\n                  </strong>\r\n              </Card.Title>\r\n           </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n            <div className=\"my-3\">\r\n            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n            </div>\r\n        </Card.Text >\r\n\r\n        <Card.Text as=\"h3\">\r\n        ${product.price}\r\n        </Card.Text>\r\n\r\n           </Card.Body>\r\n      </Card>\r\n      \r\n    )\r\n}\r\n\r\nexport default Product\r\n","// Константы главной страницы HomeScreen\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\n\r\n//Константы страницы определённого продукта\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS__RESET'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import axios from 'axios'\r\nimport {PRODUCT_LIST_FAIL,\r\n     PRODUCT_LIST_REQUEST,\r\n      PRODUCT_LIST_SUCCESS,\r\n\r\n      PRODUCT_DETAILS_FAIL,\r\n      PRODUCT_DETAILS_REQUEST,\r\n      PRODUCT_DETAILS_SUCCESS,\r\n\r\n      PRODUCT_DELETE_FAIL,\r\n      PRODUCT_DELETE_REQUEST,\r\n      PRODUCT_DELETE_SUCCESS,\r\n\r\n      PRODUCT_CREATE_FAIL,\r\n      PRODUCT_CREATE_REQUEST,\r\n      PRODUCT_CREATE_SUCCESS,\r\n\r\n      PRODUCT_UPDATE_FAIL,\r\n      PRODUCT_UPDATE_REQUEST,\r\n      PRODUCT_UPDATE_SUCCESS,\r\n\r\n      PRODUCT_CREATE_REVIEW_FAIL,\r\n      PRODUCT_CREATE_REVIEW_REQUEST,\r\n      PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n      PRODUCT_TOP_FAIL,\r\n      PRODUCT_TOP_REQUEST,\r\n      PRODUCT_TOP_SUCCESS,\r\n\r\n      \r\n    } from '../constants/productConstants'\r\n\r\n\r\n\r\nexport const listProductsDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} =  await axios.get(`/api/products/${id}`)\r\n \r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\r\n        payload: data\r\n    })\r\n    }catch(error){\r\n        dispatch({type:PRODUCT_DETAILS_FAIL,\r\n        payload:error.response && error.response.data.detail\r\n        ? error.response.data.detail: \r\n        error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const listProducts = (keyword = '') => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} =  await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({type:PRODUCT_LIST_SUCCESS,\r\n        payload: data\r\n    })\r\n    }catch(error){\r\n        dispatch({type:PRODUCT_LIST_FAIL,\r\n        payload:error.response && error.response.data.detail\r\n        ? error.response.data.detail: \r\n        error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_DELETE_SUCCESS,\r\n      })\r\n\r\n      \r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n      \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/products/create/`,\r\n       {},\r\n       config\r\n       );\r\n      \r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload:data,\r\n      })\r\n\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n      \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n       product,\r\n       config\r\n       );\r\n      \r\n\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload:data,\r\n      })\r\n\r\n      dispatch({\r\n        type:PRODUCT_DETAILS_SUCCESS, \r\n                payload:data})\r\n\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n      \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/products/${productId}/reviews/`,\r\n       review,\r\n       config\r\n       );\r\n    \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        payload:data,\r\n      })\r\n\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const listTopProducts = () => async(dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} =  await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({type:PRODUCT_TOP_SUCCESS,\r\n        payload: data\r\n    })\r\n    }catch(error){\r\n        dispatch({type:PRODUCT_TOP_FAIL,\r\n        payload:error.response && error.response.data.detail\r\n        ? error.response.data.detail: \r\n        error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <Spinner\r\n        animation = \"border\"\r\n        role='status'\r\n        style={{\r\n            height: '100px',\r\n            width:'100px',\r\n            margin: 'auto',\r\n            display:'block'\r\n        }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\nimport { Pagination} from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({pages, page, keyword='', isAdmin=false}) => {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('KEYWORD', keyword);\r\n\r\n    return (pages> 1 && (\r\n    <Pagination>\r\n        {[...Array(pages).keys()].map((x) =>(\r\n            <LinkContainer \r\n            key={x + 1}\r\n            to={!isAdmin ? \r\n                (`/?keyword=${keyword}&page=${x + 1}`)\r\n                :  \r\n                (`/admin/productlist/?keyword=${keyword}&page=${x + 1}`)\r\n            }\r\n            >\r\n                <Pagination.Item active={x + 1 === page}>\r\n                    {x + 1}\r\n                </Pagination.Item>\r\n            </LinkContainer>\r\n        ))}\r\n    </Pagination>\r\n)\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n                {children}\r\n        </Alert>\r\n    )\r\n}\r\n// Вывод предупреждения об ошибке\r\nexport default Message\r\n","import {useEffect} from 'react'\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\nimport {Carousel, Image} from 'react-bootstrap'\r\n\r\nimport {listTopProducts} from '../actions/productActions'\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\n\r\n\r\nconst ProductCarousel = () => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst productTopRated = useSelector(state => state.productTopRated)\r\nconst {error, products, loading} = productTopRated \r\n\r\nuseEffect(() => {\r\n    dispatch(listTopProducts())\r\n},[dispatch])\r\n\r\n    return ( \r\n        \r\n    loading ? <Preloader/> : error \r\n    ? <Message variant='danger'>{error}</Message> \r\n    : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (${product.price})</h4>\r\n                        </Carousel.Caption>\r\n                        </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Product from '../components/Product';\r\nimport {listProducts} from '../actions/productActions'\r\nimport Preloader from '../components/Preloader';\r\nimport Paginate from '../components/Paginate';\r\nimport Message from '../components/Message';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\n\r\n\r\n\r\nconst HomeScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products , page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n            dispatch(listProducts(keyword))\r\n       \r\n    },[dispatch, keyword])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n          \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Preloader/>\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                <Row>\r\n                    {products.map((product =>(\r\n                        <Col key={product._id} sm={12} md={6} ld={4} xl={3} className='d-flex align-items-stretch'>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                            )))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n                        }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\nimport {\r\n  listProductsDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport Message from \"../components/Message\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_DETAILS_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productRewievCreate = useSelector((state) => state.createProductReview);\r\n  const {\r\n    error: errorProductReview,\r\n    loading: loadingProductReview,\r\n    success: successProductReview,\r\n  } = productRewievCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductsDetails(match.params.id)); //Пеоедаём id из параметров запроса\r\n\r\n    if(successProductReview){\r\n        setRating(0)\r\n        setComment('')\r\n        dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n    }\r\n  }, [dispatch, match,successProductReview]);\r\n\r\n\r\n  const addToCardHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(\r\n        match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n    ))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n   \r\n      {loading ? (\r\n        <Preloader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} rating`}\r\n                    color={\"#f8e825\"}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Prise:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && ( //Выпадающий список\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()] //Cоздаём массив из product.countInStock элементов т.к товара на складе только product.countInStock, проходимся по игдексам и отображаем\r\n                              .map((\r\n                                x // индекс +1 в панели опций нашего выпадающего списка\r\n                              ) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCardHandler}\r\n                      className=\"btn-block\"\r\n                      disabled={product.countInStock == 0}\r\n                      type=\"button\"\r\n                    >\r\n                      ADD TO CART\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='my-4' md={6}>\r\n              <h4>Reviews</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant=\"info\">No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color=\"#f8e825\" />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h4>Write a review</h4>\r\n\r\n                    {loadingProductReview && <Preloader/>}\r\n                    {successProductReview && <Message variant='success'>Review submitted</Message>}\r\n\r\n                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                        as='select'\r\n                        value={rating}\r\n                        onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                            <option value=''>Select...</option>\r\n                            <option value='1'>1 - Poor</option>\r\n                            <option value='2'>2 - Fair</option>\r\n                            <option value='3'>3 - Good</option>\r\n                            <option value='4'>4 - Very Good</option>\r\n                            <option value='5'>5 - Exellent</option>\r\n                            \r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                      <Form.Label>Review</Form.Label>\r\n                      <Form.Control\r\n                      as='textarea'\r\n                      row='5'\r\n                      value={comment}\r\n                      onChange={e => setComment(e.target.value)}\r\n                      >\r\n                      </Form.Control>\r\n                      </Form.Group>\r\n\r\n                    <Button\r\n                    disabled={loadingProductReview}\r\n                    type='submit'\r\n                    variant='primary'\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant=\"info\">\r\n                      Please <Link to=\"/login\">login</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from 'axios'\r\nimport {CART_ADD_ITEM} from '../constants/cartConstants'\r\nimport {CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    \r\n \r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: CART_ADD_ITEM,\r\n            payload:{\r\n                product:data._id,  //Здесь хранится ID продукта\r\n                name:data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        })\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n//!!!!!!!!!Есть ошибка при перезагрузке корзины, нужно исправить\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState, history) =>{\r\n        dispatch({\r\n            type: CART_REMOVE_ITEM,\r\n            payload: id,\r\n        })\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddres', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React ,{ useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { Col, Card, Image, ListGroup, Row,Form, Button} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (productId) =>{\r\n        dispatch(removeFromCart(productId))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () =>{\r\n        history.push(`/login?redirect=shipping`)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ):(\r\n                    <ListGroup variant ='flush'> \r\n                        {cartItems.map(item =>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                        <Form.Control as='select'\r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n\r\n                                         {\r\n                                             [...Array(item.countInStock).keys()]  //Cоздаём массив из product.countInStock элементов т.к товара на складе только product.countInStock, проходимся по игдексам и отображаем \r\n                                             .map((x) => (                           // индекс +1 в панели опций нашего выпадающего списка \r\n                                                 <option key={x+1} value={x+1}>\r\n                                                     {x+1}\r\n                                                 </option>\r\n                                             ))\r\n                                         }\r\n                                          \r\n                                        </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                         <Button type ='button' variant='light'\r\n                                         onClick={() => removeFromCartHandler(item.product)}\r\n                                         >\r\n                                         <i className='fas fa-trash'></i>\r\n                                         </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Subtotal ({\r\n                                cartItems.reduce((acc, item) => acc + item.qty, 0)\r\n                                //reduсe принимает наш массив и складывает qty каждого продукта тем самым получая ощее количество в корзине\r\n                                }) items</h2> \r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </ListGroup.Item> \r\n                    </ListGroup>\r\n                  \r\n                    <ListGroup.Item>\r\n                    <Button\r\n                    type='button'\r\n                    className='btn-block'\r\n                    disabled={cartItems.length === 0}\r\n                    onClick={checkoutHandler}\r\n                    >\r\n                        Proceed To Chekout\r\n                    </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n       <Container>\r\n           <Row className= 'justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n            {children}\r\n            </Col>\r\n           </Row>\r\n       </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useEffect,useState} from 'react'\r\nimport { Button, Form,Row,Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {login} from '../actions/userActions'\r\nimport Message from '../components/Message';\r\nimport Preloader from '../components/Preloader';\r\n\r\nconst LoginScrin = ({location, history}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setpassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/' \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[dispatch, history, userInfo, redirect]) \r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            \r\n            {loading && <Preloader/>}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId = 'email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = 'password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setpassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                    </Button>\r\n            </Form>\r\n\r\n        <Row className='py-3'>\r\n        <Col>\r\n         New Customer? <Link \r\n         to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n         Register\r\n         </Link>\r\n        </Col>\r\n        </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScrin\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n \r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  \r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch,history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(password != confirmPassword){\r\n        setMessage('Password do not match')\r\n    }else{\r\n        dispatch(register(name, email, password));\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n      {loading && <Preloader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n           required \r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setpassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"PasswordCongirm\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n                    Register\r\n                    </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n         Have an Account? <Link \r\n         to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n         Sign In\r\n         </Link>\r\n        </Col>\r\n        </Row>\r\n\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Row, Col,Table } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { orders, loading:loadingOrders, error:errorOrders } = orderListMy;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n        dispatch(getUserDetails(\"profile\")); //Параметр который передан как id\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Password do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({\r\n        'id': user._id,\r\n        'name': name,\r\n        'email': email,\r\n        'password': password\r\n      }))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n        {loading && <Preloader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              \r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"PasswordCongirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              \r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ?( \r\n        <Preloader/> ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped  hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0,10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className='btn-sm'>Details</Button>\r\n                  </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n\r\n\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_RESET,\r\n\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nimport { CART_CLEAR_ITEMS} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_CREATE_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      dispatch({\r\n        type:CART_CLEAR_ITEMS,\r\n        payload:data\r\n      })\r\n\r\n      localStorage.removeItem('cartItems')\r\n     \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_DETAILS_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/orders/${id}/`, config);\r\n //debugger\r\n      dispatch({\r\n        type: ORDER_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.put(`/api/orders/${id}/pay/`, paymentResult,config);\r\n //debugger\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliveredOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_DELIVER_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.put(`/api/orders/${order._id}/deliver/`, {},config);\r\n //debugger\r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      \r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_LIST_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/orders/`,config);\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      \r\n    \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport { Nav,  } from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeiorder\">\r\n            <Nav.Link>Placeorder</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Placeorder</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const {shippingAddres} = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [address, setAddress] = useState(shippingAddres.address);\r\n  const [city, setCity] = useState(shippingAddres.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddres.postalCode);\r\n  const [country, setCountry] = useState(shippingAddres.country);\r\n\r\nconst submitHandler =(e) =>{\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({address, city ,postalCode, country}))\r\n    history.push('/payment')\r\n}\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n            Continue\r\n        </Button>\r\n\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport {ORDER_NOT_PAYMENT_METHOD, DELETE_MESSAGE} from '../constants/orderConstants'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddres } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [paymentMethod, SetPaymentMethod] = useState('');\r\n\r\n  if (!shippingAddres.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n\r\n\r\nconst  selectPaymentMethodHandler = () => {\r\n  if(paymentMethod !== 'PayPal'){\r\n  dispatch({type: ORDER_NOT_PAYMENT_METHOD})\r\n  }\r\n}\r\nconst failPayment = useSelector(state => state.orderCreate) //Слишко заковыристые пути по удалению одгого едеинственного предупреждения\r\nconst {errror, stylee} = failPayment\r\nconst deleteMessage =() =>{\r\n   dispatch({type: DELETE_MESSAGE})\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value={'on' ? 'PayPal' : null}\r\n              onClick={deleteMessage}\r\n              onChange={(e) => SetPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {errror  && <Message variant={stylee}>{errror}</Message>}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" onClick={selectPaymentMethodHandler} >\r\n          Continue\r\n        </Button>\r\n        \r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Row, Col,ListGroup,Image,Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from '../components/Message';\r\nimport {Link} from 'react-router-dom'\r\nimport {createOrder} from '../actions/orderActions'\r\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants'\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)).toFixed(2)\r\n\r\n    \r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [dispatch,success, history])\r\n \r\n\r\n    const placeOrder =() =>{\r\n       dispatch(createOrder({\r\n           orderItems:cart.cartItems,\r\n           shippingAddres: cart.shippingAddres,\r\n           paymentMethod:cart.paymentMethod,\r\n           itemsPrice:cart.itemsPrice,\r\n           shippingPrice:cart.shippingPrice,\r\n           totalPrice: cart.totalPrice\r\n       }))\r\n    }\r\n    return (\r\n        <div>\r\n    <CheckoutSteps step1 step2 step3 step4/> \r\n    <Row>\r\n        <Col md={8}>\r\n        <ListGroup>\r\n            <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                    <strong>Shipping: </strong>\r\n                    {cart.shippingAddres.address},\r\n                    {' '}\r\n                    {cart.shippingAddres.city},\r\n                    {' '}\r\n                    {cart.shippingAddres.postalCode},\r\n                    {' '}\r\n                    {cart.shippingAddres.country},\r\n                </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>\r\n                    <strong>Method: </strong>\r\n                    {cart.paymentMethod}\r\n              \r\n                </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n           {cart.cartItems.length === 0 ? <Message variant='info'>\r\n               You cart is empty\r\n           </Message> : (\r\n               <ListGroup variant='flush'>\r\n                   {cart.cartItems.map((item, index) => (\r\n                       <ListGroup.Item key={index}>\r\n                           <Row>\r\n                               <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                               </Col>\r\n                               <Col>\r\n                               <Link to ={`/product/${item.product}`}>{item.name}</Link>\r\n                               </Col>\r\n\r\n                               <Col md={4}>\r\n                            {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                               </Col>\r\n                           </Row>\r\n                       </ListGroup.Item>\r\n                   ))}\r\n               </ListGroup>\r\n           )}\r\n            </ListGroup.Item>\r\n\r\n        </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                    <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items:</Col>\r\n                            <Col>${cart.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    \r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping:</Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total:</Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                    </ListGroup.Item>\r\n\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        disabled={cart.cartItems === 0}\r\n                        onClick={placeOrder}\r\n                        >\r\n                            Place Order\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n            </Card>\r\n        </Col>\r\n        </Row>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Row, Col,ListGroup,Image,Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\nimport Message from '../components/Message';\r\nimport Preloader from '../components/Preloader';\r\nimport {Link} from 'react-router-dom'\r\nimport {getOrderDetails, payOrder, deliveredOrder} from '../actions/orderActions'\r\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {ORDER_PAY_RESET} from '../constants/orderConstants'\r\nimport {ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay} = orderPay\r\n    \r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver, success:successDeliver} = orderDeliver\r\n   \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n   // AY5HB-0os-aKPUussfFY4rfoM8FucILTjAtSJsjWJ4t73bwSYA0qgbWRrWXqQJ4pfMHTLT0U1Eaj4Off\r\n    const addPaypalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AY5HB-0os-aKPUussfFY4rfoM8FucILTjAtSJsjWJ4t73bwSYA0qgbWRrWXqQJ4pfMHTLT0U1Eaj4Off'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n\r\n\r\n        if(!order || successPay ||  order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n                if(!window.paypal){\r\n                    addPaypalScript()\r\n                }else{\r\n                    setSdkReady(true)\r\n                }\r\n        }\r\n    }, [dispatch, order, orderId,successPay, successDeliver])\r\n\r\nconst successPaymentHandler = (paymentResult) =>{\r\n    dispatch(payOrder(orderId, paymentResult))\r\n}\r\n\r\nconst deliverHandler = () =>{\r\n    dispatch(deliveredOrder(order))\r\n}\r\n\r\n    //debugger\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n        }\r\n   \r\n\r\n    return loading ? (\r\n        <Preloader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order ID: {order._id}</h1>\r\n    <Row>\r\n        <Col md={8}>\r\n        <ListGroup>\r\n            <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n\r\n                <p><strong>Name: </strong>{order.user.name}</p>\r\n                <p><strong>Name: </strong><a href={`mailto:${order.user.email}`}>\r\n                    {order.user.email}\r\n                    </a></p>\r\n\r\n\r\n\r\n                <p>\r\n                    <strong>Shipping: </strong>\r\n                    {order.shippingAddress.address},\r\n                    {' '}\r\n                    {order.shippingAddress.city},\r\n                    {' '}\r\n                    {order.shippingAddress.postalCode},\r\n                    {' '}\r\n                    {order.shippingAddress.country},\r\n                </p>\r\n\r\n                {order.idDelivered ? (\r\n                    <Message variant='success'>Delivered on {order.deviveredAt.substring(0,19).split('T').join(' ')}</Message>\r\n                ):\r\n                <Message variant='warning'>Not Delivered</Message>\r\n                }\r\n\r\n\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>\r\n                    <strong>Method: </strong>\r\n                    {order.paymentMethod}\r\n              \r\n                </p>\r\n                {order.isPaid ? (\r\n                    <Message variant='success'>Paid on {order.paidAt.substring(0,19).split('T').join(' ')}</Message>\r\n                ):\r\n                <Message variant='warning'>Not Paid</Message>\r\n                }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n           {order.orderItems.length === 0 ? <Message variant='info'>\r\n               Order is empty\r\n           </Message> : (\r\n               <ListGroup variant='flush'>\r\n                   {order.orderItems.map((item, index) => (\r\n                       <ListGroup.Item key={index}>\r\n                           <Row>\r\n                               <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                               </Col>\r\n                               <Col>\r\n                               <Link to ={`/product/${item.product}`}>{item.name}</Link>\r\n                               </Col>\r\n\r\n                               <Col md={4}>\r\n                            {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                               </Col>\r\n                           </Row>\r\n                       </ListGroup.Item>\r\n                   ))}\r\n               </ListGroup>\r\n           )}\r\n            </ListGroup.Item>\r\n\r\n        </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                    <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items:</Col>\r\n                            <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    \r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping:</Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total:</Col>\r\n                            <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                    {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                            {loadingPay && <Preloader/>}\r\n\r\n                            {!sdkReady ?(\r\n                                <Preloader/>\r\n                            ) : (\r\n                                <PayPalButton\r\n                                amount={order.totalPrice}\r\n                                onSuccess={successPaymentHandler}\r\n                                />\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    )}\r\n\r\n\r\n                    </ListGroup>\r\n                    {loadingDeliver && <Preloader/>}\r\n                    {userInfo && userInfo.isAdmin && order.isPaid && !order.idDelivered && (\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='button'\r\n                            className=' btn btn-block'\r\n                            onClick={deliverHandler}\r\n                            >\r\n                                Mark As Deliver\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    )}\r\n            </Card>\r\n        </Col>\r\n        </Row>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Table,} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport {listUsers, deleteUser} from '../actions/userActions'\r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst userList = useSelector(state => state.userList)\r\nconst {loading, error, users} = userList\r\n\r\nconst userLogin = useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nconst userDelete = useSelector(state => state.userDelete)\r\nconst {success:successDelete} = userDelete\r\n\r\n\r\nconst deliteHandler = (id) =>{\r\n    if(window.confirm('Are you sure you want to delete this user')){\r\n    dispatch(deleteUser(id))\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n    }else{\r\n      history.push('/login')  \r\n    }\r\n\r\n}, [dispatch, history, successDelete, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Preloader/> \r\n            ) : error ? (\r\n                <Message variant ='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n                        <th></th>\r\n                        </tr>\r\n                            \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {users.map( user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm' >\r\n                                        <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button variant='danger' className='btn-sm' \r\n                                    onClick={() => deliteHandler(user._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n  const userId = match.params.id\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setAdmin] = useState(false);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error:errorUpdate, success:successUpdate, loading:loadingUpdate } = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n    if(successUpdate){\r\n      dispatch({type:USER_UPDATE_RESET})\r\n      history.push('/admin/userlist')\r\n    }else{\r\n      if(!user.name || user._id !== Number(userId)){\r\n        dispatch(getUserDetails(userId))\r\n   }else{\r\n       setName(user.name)\r\n       setEmail(user.email)\r\n       setAdmin(user.isAdmin)\r\n   }\r\n    }\r\n  }, [dispatch, user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({\r\n      _id:user._id, name, email, isAdmin\r\n    }))\r\n\r\n\r\n  };\r\n\r\n  return (\r\n  <div>\r\n      <Link to='/admin/userlist'>\r\n      Go Back\r\n      </Link>\r\n    <FormContainer>\r\n      <h1>Edit User</h1>\r\n    {loadingUpdate && <Preloader/>}\r\n    {errorUpdate && (<Message variant='danger'>{errorUpdate}</Message>)}\r\n\r\n{loading ? (<Preloader/>) : error ? (<Message variant='danger'>{error}</Message>) \r\n: (\r\n    <Form onSubmit={submitHandler}>\r\n    <Form.Group controlId=\"name\">\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n        type=\"name\"\r\n        placeholder=\"Enter Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"email\">\r\n      <Form.Label>Email Address</Form.Label>\r\n      <Form.Control\r\n        type=\"email\"\r\n        placeholder=\"Enter Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"isAdmin\">\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        label=\"Is Admin\"\r\n        checked={isAdmin}\r\n        onChange={(e) => setAdmin(e.target.checked)}\r\n      ></Form.Check>\r\n    </Form.Group>\r\n\r\n    <Button type='submit' variant='primary'>\r\n                Update\r\n                </Button>\r\n  </Form>\r\n)}\r\n    </FormContainer>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Table, Row, Col} from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from '../components/Paginate';\r\nimport Preloader from \"../components/Preloader\";\r\nimport {listProducts, deleteProduct, createProduct} from '../actions/productActions'\r\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst productList = useSelector(state => state.productList)\r\nconst {loading, error, products, page, pages} = productList\r\n\r\nconst productDelete = useSelector(state => state.productDelete)\r\nconst {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n\r\nconst productCreate = useSelector(state => state.productCreate)\r\nconst {loading:loadingCreate, error:errorCreate, success:successCreate, product: createdProduct} = productCreate\r\n\r\nconst userLogin = useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nlet keyword = history.location.search\r\n\r\nuseEffect(() => {\r\n    dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n    if(!userInfo.isAdmin){\r\n            history.push('/login')  \r\n    }\r\n    if(successCreate){\r\n           history.push(`/admin/product/${createdProduct._id}/edit`)  \r\n    }else{\r\n        dispatch(listProducts(keyword))\r\n    }\r\n\r\n\r\n}, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\nconst deliteHandler = (id) =>{\r\n    if(window.confirm('Are you sure you want to delete this product')){\r\n     dispatch(deleteProduct(id))\r\n    }\r\n}\r\n\r\nconst createProductHandler = () =>{\r\n    //Создание продукта\r\n    dispatch(createProduct())\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n            <Button className='my-3' onClick={createProductHandler}>\r\n               <i className=' fas fa-plus'></i>  Create Product\r\n            </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Preloader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Preloader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading ? (\r\n                <Preloader/> \r\n            ) : error ? (\r\n                <Message variant ='danger'>{error}</Message>\r\n            ) : (\r\n                <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                        </tr>\r\n                            \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {products.map( product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm' >\r\n                                        <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button variant='danger' className='btn-sm' \r\n                                    onClick={() => deliteHandler(product._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {listProductsDetails, updateProduct } from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\n\r\n\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n  const productId = match.params.id\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { error: errorUpdate, loading:loadingUpdate, success:successUpdate } = productUpdate;\r\n\r\n  useEffect(() => {\r\nif(successUpdate){\r\n  dispatch({type:PRODUCT_UPDATE_RESET})\r\n  history.push('/admin/productlist')\r\n} else {\r\n  if(!product.name || product._id !== Number(productId)){\r\n    dispatch(listProductsDetails(productId))\r\n}else{\r\n   setName(product.name)\r\n   setPrice(product.price)\r\n   setCategory(product.category)\r\n   setDescription(product.description)\r\n   setBrand(product.brand)\r\n   setImage(product.image)\r\n   setCountInStock(product.countInStock)\r\n}\r\n}\r\n  }, [dispatch ,product, productId, history,successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct({\r\n      _id:productId,\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      countInStock,\r\n      description\r\n    }))\r\n  };\r\n\r\nconst uploadFileHandler = async (e) => {\r\n const file = e.target.files[0]\r\n const formData = new FormData()\r\n\r\n formData.append('image', file)\r\n formData.append('product_id', productId)\r\n\r\n setUploading(true)\r\n\r\n try{\r\n   const config = {\r\n     headers:{\r\n       'Content-Type':'multipart/form-data'\r\n     }\r\n   }\r\n\r\n   const {data} = await axios.post(`/api/products/upload/`, formData, config)\r\n\r\n   setImage(data)\r\n   setUploading(false)\r\n\r\n }catch(error){\r\n\r\n }\r\n\r\n}\r\n\r\n  return (\r\n  <div>\r\n      <Link to='/admin/productlist'>\r\n      Go Back\r\n      </Link>\r\n    <FormContainer>\r\n      <h1>Edit Product</h1>\r\n      {loadingUpdate && <Preloader/>}\r\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n      {loading ? (<Preloader/>) : error ? (<Message variant='danger'>{error}</Message>) \r\n: (\r\n    <Form onSubmit={submitHandler}>\r\n    <Form.Group controlId=\"name\">\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n        type=\"name\"\r\n        placeholder=\"Enter Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"price\">\r\n      <Form.Label>Price</Form.Label>\r\n      <Form.Control\r\n        type=\"number\"\r\n        placeholder=\"Enter Price\"\r\n        value={price}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"image\">\r\n      <Form.Label>Image</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Enter image\"\r\n        value={image}\r\n        onChange={(e) => setImage(e.target.value)}\r\n      ></Form.Control>\r\n      <Form.File\r\n      id = 'image-file'\r\n      label='Choose File'\r\n      custom\r\n      onChange={uploadFileHandler}\r\n      >\r\n      </Form.File>\r\n      {uploading && <Preloader/>}\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"brand\">\r\n      <Form.Label>Brand</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Enter brand\"\r\n        value={brand}\r\n        onChange={(e) => setBrand(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"countInStock\">\r\n      <Form.Label>Stock</Form.Label>\r\n      <Form.Control\r\n        type=\"number\"\r\n        placeholder=\"Enter Stock\"\r\n        value={countInStock}\r\n        onChange={(e) => setCountInStock(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"category\">\r\n      <Form.Label>Category</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Enter category\"\r\n        value={category}\r\n        onChange={(e) => setCategory(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"description\">\r\n      <Form.Label>Description</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Enter description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      ></Form.Control>\r\n    </Form.Group>\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    <Button type='submit' variant='primary'>\r\n                Update\r\n                </Button>\r\n  </Form>\r\n)}\r\n    </FormContainer>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Table,} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport {listOrders} from '../actions/orderActions'\r\n\r\n\r\nconst OrderListScreen = ({history}) => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst orderList = useSelector(state => state.orderList)\r\nconst {loading, error, orders} = orderList\r\n\r\nconst userLogin = useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin\r\n\r\nuseEffect(() => {\r\n    if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n    }else{\r\n      history.push('/login')  \r\n    }\r\n\r\n}, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Preloader/> \r\n            ) : error ? (\r\n                <Message variant ='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>USER</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                        </tr>\r\n                            \r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map( order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt}</td>\r\n                                <td>${order.totalPrice}</td>\r\n\r\n                                <td>{order.isPaid ? (\r\n                                   order.paidAt.substring(0,10)\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}\r\n                                </td>\r\n\r\n                                <td>{order.idDelivered ? ( //isDelivered\r\n                                   order.deviveredAt.substring(0,10)\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm' >\r\n                                        Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import {Container} from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen'\nimport LoginScrin from './screens/LoginScrin';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport ProductCarousel from './components/ProductCarousel';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className = \"py-3\">\n        <Container>\n        <Route path='/' component={HomeScreen} exact/>\n        <Route path='/product/:id' component={ProductScreen} exact/>\n        <Route path='/cart/:id?' component={CartScreen} exact/>\n        <Route path='/login' component={LoginScrin} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        \n        \n        <Route path='/admin/userlist' component={UserListScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        \n        <Route path='/admin/productlist' component={ProductListScreen} />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducers,\r\n       productDetailsReducers,\r\n       productDeleteReducers,\r\n       productCreateReducers,\r\n       productUpdateReducers,\r\n       productReviewCreate,\r\n       productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userUpdateReducer,userDeleteReducer,userListReducer,userDetailsReducers, userLoginReducers, userRegisterReducers,userUpdateProfileReducers,} from './reducers/userReducers'\r\nimport { orderDeliverReducer, orderListReducer, orderListMyReducer,orderCreateReducer,orderDetailsReducer,orderPayReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducers,\r\n    productDetails:productDetailsReducers,\r\n    productDelete:productDeleteReducers,\r\n    productCreate: productCreateReducers,\r\n    productUpdate:productUpdateReducers,\r\n    createProductReview:productReviewCreate,\r\n    productTopRated:productTopRatedReducer,\r\n\r\n\r\n    cart:cartReducer,\r\n\r\n    userLogin:userLoginReducers,\r\n    userRegister:userRegisterReducers,\r\n    userDetails: userDetailsReducers,\r\n    userUpdateProfile:userUpdateProfileReducers,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n\r\n\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddres') ?\r\n    JSON.parse(localStorage.getItem('shippingAddres')): {}\r\n\r\n    const savingPaymantMethod = localStorage.getItem('paymentMethod') ?\r\n    JSON.parse(localStorage.getItem('paymentMethod')): {}\r\n\r\n\r\nconst initialState = {\r\n    cart:{\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddres: shippingAddressFromStorage,\r\n        paymentMethod: savingPaymantMethod\r\n        \r\n    },\r\n    userLogin:{userInfo: userInfoFromStorage},\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {PRODUCT_LIST_FAIL,\r\n       PRODUCT_LIST_REQUEST,\r\n       PRODUCT_LIST_SUCCESS,\r\n    \r\n      PRODUCT_DETAILS_FAIL,\r\n      PRODUCT_DETAILS_REQUEST,\r\n      PRODUCT_DETAILS_SUCCESS,\r\n\r\n      PRODUCT_DELETE_FAIL,\r\n      PRODUCT_DELETE_REQUEST,\r\n      PRODUCT_DELETE_SUCCESS,\r\n\r\n      PRODUCT_CREATE_FAIL,\r\n      PRODUCT_CREATE_REQUEST,\r\n      PRODUCT_CREATE_SUCCESS,\r\n      PRODUCT_CREATE_RESET,\r\n\r\n      PRODUCT_UPDATE_FAIL,\r\n      PRODUCT_UPDATE_REQUEST,\r\n      PRODUCT_UPDATE_SUCCESS,\r\n      PRODUCT_UPDATE_RESET,\r\n\r\n      PRODUCT_CREATE_REVIEW_FAIL,\r\n      PRODUCT_CREATE_REVIEW_REQUEST,\r\n      PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n      PRODUCT_TOP_FAIL,\r\n      PRODUCT_TOP_REQUEST,\r\n      PRODUCT_TOP_SUCCESS,\r\n    } from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducers = (state = {products:[]}, action) => {\r\n        switch(action.type){\r\n            case PRODUCT_LIST_REQUEST:\r\n                return{loading:true, products:[]}\r\n\r\n            case PRODUCT_LIST_SUCCESS:\r\n                return{loading:false, \r\n                    products:action.payload.products, \r\n                    page:action.payload.page,\r\n                    pages:action.payload.pages}\r\n\r\n            case PRODUCT_LIST_FAIL:\r\n                return{loading:false, error:action.payload}\r\n            \r\n            default:\r\n                return state\r\n        }\r\n}\r\n\r\nexport const productDetailsReducers = (state = {product:{reviews:[]}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return{product:action.payload, loading:false}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return{loading:false, error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducers = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return{loading:true}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return{loading:false, success:true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return{loading:false, error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducers = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return{loading:true}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return{loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return{loading:false, error:action.payload}\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducers = (state = {product: {}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return{\r\n                \r\n                loading:true}\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return{loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return{loading:false, error:action.payload}\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreate = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return{loading:true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return{loading:false, success:true,}\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return{loading:false, error:action.payload}\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return{loading:true , products:[]}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return{loading:false, products: action.payload}\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return{loading:false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM} from '../constants/cartConstants'\r\nimport {CART_REMOVE_ITEM ,\r\n     CART_SAVE_SHIPPING_ADDRESS,\r\n     CART_SAVE_PAYMENT_METHOD,\r\n     CART_CLEAR_ITEMS\r\n    } from '../constants/cartConstants'\r\n   \r\n\r\nexport const cartReducer = (state = {cartItems:[], shippingAddres:{}}, action) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                    x.product === existItem.product ? item : x) // Здесь id мы получаем\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n            \r\n            case CART_REMOVE_ITEM:\r\n                return{\r\n                    ...state,\r\n                    cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n                }\r\n            case  CART_SAVE_SHIPPING_ADDRESS:\r\n                return{\r\n                    ...state,\r\n                    shippingAddres: action.payload\r\n                }\r\n\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return{\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n            case CART_CLEAR_ITEMS:\r\n                return {\r\n                    ...state,\r\n                    cartItems:[]\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n\r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n\r\n  \r\n\r\n  USER_LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducers = (state = {userInfo:{}}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n        return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const userRegisterReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n        return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducers = (state = {user:{}}, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true};\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    \r\n    case USER_DETAILS_RESET:\r\n        return {user: {}};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducers = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success:true ,userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users:[]}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success:true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success:true };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n        return {user:{}};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_NOT_PAYMENT_METHOD,\r\n    DELETE_MESSAGE, //Удаляет сообщение на странице payment\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET,\r\n\r\n\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              success:true,\r\n              order:action.payload\r\n\r\n                }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        \r\n        case ORDER_NOT_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                errror: 'Укажите способ оплаты',\r\n                stylee: 'info'\r\n            }\r\n        case DELETE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                errror: ''\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return{}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              order:action.payload\r\n\r\n                }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              success:true\r\n\r\n                }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        case ORDER_PAY_RESET:\r\n            return{  }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = {orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              orders:action.payload\r\n\r\n                }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        case ORDER_LIST_MY_RESET:\r\n            return{\r\n            orders: []\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              orders:action.payload\r\n\r\n                }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n              loading:false,\r\n              success:true\r\n\r\n                }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n              loading:false,\r\n              error:action.payload\r\n                }\r\n        case ORDER_DELIVER_RESET:\r\n            return{  }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\n\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\n\n\n\nReactDOM.render( // Подключаемся к redux стору\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}